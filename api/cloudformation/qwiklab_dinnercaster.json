{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "AWS CloudFormation Template for DinnerCaster: Builds DynamoDB tables, an S3 bucket, and Lambda functions for use in an Area51 application. ** This template creates multiple AWS resources. You will be billed for the AWS resources used if you create a stack from this template.",

  "Parameters": {

    "DinnerCasterTableRead": {
      "Description": "Read capacity units for DynamoDB table",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "6",
      "AllowedPattern": "[0-9]*",
      "Default": "1"
    },

    "DinnerCasterTableWrite": {
      "Description": "Write capacity units for DynamoDB table",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "6",
      "AllowedPattern": "[0-9]*",
      "Default": "1"
    }
  },

  "Resources": {

    "DynamoDBTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [{
          "AttributeName": "DinnerName",
          "AttributeType": "S"
        }],
        "KeySchema": [{
          "AttributeName": "DinnerName",
          "KeyType": "HASH"
        }],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": {
            "Ref": "DinnerCasterTableRead"
          },
          "WriteCapacityUnits": {
            "Ref": "DinnerCasterTableWrite"
          }
        },
        "StreamSpecification": {
          "StreamViewType": "NEW_AND_OLD_IMAGES"
        },
        "TableName": "DinnerCaster"
      }
    },
    "AppendItemToListFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "initDynamofunc.handler",
        "Role": {
          "Fn::GetAtt": ["DinnerCasterDynamoDBScanRole", "Arn"]
        },
        "Code": {
          "S3Bucket": "dinnercaster-assets-1",
          "S3Key": "initDynamofunc.js.zip"
        },
        "Runtime": "nodejs4.3"
      }
    },
    "getdinnerslistFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "getdinnerslistfunc.handler",
        "Role": {
          "Fn::GetAtt": ["DinnerCasterDynamoDBScanRole", "Arn"]
        },
        "Code": {
          "S3Bucket": "dinnercaster-assets-1",
          "S3Key": "getdinnerslistfunc.js.zip"
        },
        "Runtime": "nodejs4.3"
      },
      "getdinnerdetailsFunction": {
        "Type": "AWS::Lambda::Function",
        "Properties": {
          "Handler": "getdinnerdetailsfunc.handler",
          "Role": {
            "Fn::GetAtt": ["DinnerCasterDynamoDBScanRole", "Arn"]
          },
          "Code": {
            "S3Bucket": "dinnercaster-assets-1",
            "S3Key": "getdinnerdetailslistfunc.js.zip"
          },
          "Runtime": "nodejs4.3"
        }
    },
    "DinnerCasterDynamoDBScanRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName" : "DinnerCasterDynamoDBScanRole",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": "lambda.amazonaws.com"
            },
            "Action": "sts:AssumeRole"
          }]
        }
      }
    },
    "DynamoDBFullRolePolicies": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "DinnerCasterDynamoDBScanPolicy",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Action": [
              "dynamodb:Query",
              "dynamodb:Scan",
              "s3:GetObject",
              "s3:PutObject",
              "dynamodb:BatchWriteItem",
              "dynamodb:*"
            ],
            "Resource": ["*"]
          }]
        },
        "Roles": [{
          "Ref": "DinnerCasterDynamoDBScanRole"
        }]
      }
    },
    "DinnerCasterDynamoDBQueryRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName" : "DinnerCasterDynamoDBQueryRole",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": "lambda.amazonaws.com"
            },
            "Action": "sts:AssumeRole"
          }]
        }
      }
    },
    "DynamoDBSelectedRolePolicies": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "DinnerCasterDynamoDBQueryPolicy",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Action": [
              "dynamodb:Query"
            ],
            "Resource": "*"
          }]
        },
        "Roles": [{
          "Ref": "DinnerCasterDynamoDBQueryRole"
        }]
      }
    },
    "ScheduledRule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "ScheduledRule",
        "ScheduleExpression": "rate(1 minute)",
        "State": "ENABLED",
        "Targets": [{
          "Arn": {
            "Fn::GetAtt": ["AppendItemToListFunction", "Arn"]
          },
          "Id": "TargetFunctionV1"
        }]
      }
    },
    "PermissionForEventsToInvokeLambda": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "AppendItemToListFunction"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": ["ScheduledRule", "Arn"]
        }
      }
    }
  },
  "Outputs": {
    "TableName": {
      "Value": {
        "Ref": "DynamoDBTable"
      },
      "Description": "Table name of the newly created DynamoDB table"
    }
  }
}
